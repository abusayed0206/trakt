name: Daily Trakt Data Sync

on:
  schedule:
    # Run daily at 05:34 AM UTC
    - cron: '34 5 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  sync-trakt-data:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('scripts/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt

      - name: Create environment file
        run: |
          echo "TRAKT_API_KEY=${{ secrets.TRAKT_API_KEY }}" > .env.local
          echo "TRAKT_USERNAME=${{ secrets.TRAKT_USERNAME }}" >> .env.local
          echo "TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}" >> .env.local

      - name: Ensure data directories exist
        run: |
          mkdir -p public/data/json
          mkdir -p public/data/imgs

      - name: Fetch Trakt data
        run: |
          python scripts/manage_data.py fetch
        env:
          TRAKT_API_KEY: ${{ secrets.TRAKT_API_KEY }}
          TRAKT_USERNAME: ${{ secrets.TRAKT_USERNAME }}
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}

      - name: Commit Trakt data changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add public/data/json/
          if git diff --staged --quiet; then
            echo "No changes to commit for Trakt data"
          else
            git commit -m "🎬 Update Trakt data - $(date -u '+%Y-%m-%d %H:%M UTC')"
            echo "trakt_data_updated=true" >> $GITHUB_ENV
          fi

      - name: Download media files
        run: |
          python scripts/download_media.py
        env:
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}

      - name: Debug - Check downloaded files
        run: |
          echo "=== Checking if files were downloaded ==="
          ls -la public/data/imgs/ || echo "imgs directory doesn't exist"
          find public/data/imgs -name "*.jpg" -type f | head -10 || echo "No jpg files found"
          echo "=== Git status before adding ==="
          git status --porcelain
          echo "=== Files that would be added ==="
          git add --dry-run public/data/imgs/ || echo "Nothing to add"

      - name: Commit media files changes
        run: |
          git add public/data/imgs/
          if git diff --staged --quiet; then
            echo "No new media files to commit"
            echo "=== Git status after staging ==="
            git status --porcelain
          else
            git commit -m "🖼️ Update media files - $(date -u '+%Y-%m-%d %H:%M UTC')"
            echo "media_files_updated=true" >> $GITHUB_ENV
          fi

      - name: Push all changes
        run: |
          if [[ "${{ env.trakt_data_updated }}" == "true" ]] || [[ "${{ env.media_files_updated }}" == "true" ]]; then
            git push origin main
            echo "Changes pushed successfully"
          else
            echo "No changes to push"
          fi

      - name: Summary
        run: |
          echo "## 📊 Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Date**: $(date -u '+%Y-%m-%d %H:%M UTC')" >> $GITHUB_STEP_SUMMARY
          echo "- **Trakt Data Updated**: ${{ env.trakt_data_updated || 'false' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Media Files Updated**: ${{ env.media_files_updated || 'false' }}" >> $GITHUB_STEP_SUMMARY
          
          # Count files
          json_files=$(find public/data/json -name "*.json" | wc -l)
          image_files=$(find public/data/imgs -name "*.jpg" | wc -l)
          
          echo "- **Total JSON Files**: $json_files" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Image Files**: $image_files" >> $GITHUB_STEP_SUMMARY

      - name: Clean up environment file
        if: always()
        run: rm -f .env.local
